# Generated by Django 3.1.7 on 2022-01-28 18:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_photo', models.FileField(blank=True, default='default_files/default_image.jpg', upload_to='account_files/profile_photos/')),
                ('first_name', models.CharField(default='none', max_length=50)),
                ('last_name', models.CharField(default='none', max_length=50)),
                ('interest', models.CharField(default='none', max_length=50)),
                ('email', models.CharField(default='none', max_length=50)),
                ('auth_code', models.CharField(default='none', max_length=50)),
                ('request_code', models.CharField(default='none', max_length=50)),
                ('payment_status', models.BooleanField(default=False)),
                ('ec_status', models.BooleanField(default=False)),
                ('status', models.BooleanField(default=False)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Buzzer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('app_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='none', max_length=50)),
                ('creator', models.CharField(default='Admin', max_length=50)),
                ('status', models.BooleanField(default=False)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Clap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('app_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default='none', max_length=50)),
                ('last_name', models.CharField(default='none', max_length=50)),
                ('profile_photo', models.FileField(blank=True, default='default_files/default_face.png', upload_to='account_files/profile_photos/')),
                ('comment', models.CharField(default='none', max_length=200)),
                ('status', models.BooleanField(default=True)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('app_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_code', models.CharField(default='none', max_length=50)),
                ('app_user_name1', models.CharField(default='none', max_length=50)),
                ('app_user_name2', models.CharField(default='none', max_length=50)),
                ('profile_photo', models.FileField(blank=True, default='default_files/default_face.png', upload_to='account_files/profile_photos/')),
                ('title', models.CharField(default='none', max_length=50)),
                ('detail', models.CharField(default='none', max_length=100)),
                ('video', models.FileField(blank=True, default='default_files/default.mp4', upload_to='8app_files/videos/Wapp_files/videos/Xapp_files/videos/8app_files/videos/5app_files/videos/5app_files/videos/Oapp_files/videos/7app_files/videos/Bapp_files/videos/W')),
                ('category', models.CharField(default='none', max_length=50)),
                ('switch_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('tag1', models.CharField(default='none', max_length=20)),
                ('tag2', models.CharField(default='none', max_length=20)),
                ('tag3', models.CharField(default='none', max_length=20)),
                ('tag4', models.CharField(default='none', max_length=20)),
                ('tag5', models.CharField(default='none', max_length=20)),
                ('view_count', models.IntegerField(default=0)),
                ('clap_count', models.IntegerField(default=0)),
                ('buzzer_count', models.IntegerField(default=0)),
                ('comment_count', models.IntegerField(default=0)),
                ('report_count', models.IntegerField(default=0)),
                ('rating', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=False)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('app_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(default='none', max_length=50)),
                ('status', models.BooleanField(default=True)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('app_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_code', models.CharField(default='none', max_length=50)),
                ('app_user_name1', models.CharField(default='none', max_length=50)),
                ('app_user_name2', models.CharField(default='none', max_length=50)),
                ('profile_photo', models.FileField(blank=True, default='default_files/default_face.png', upload_to='account_files/profile_photos/')),
                ('title', models.CharField(default='none', max_length=50)),
                ('detail', models.CharField(default='none', max_length=100)),
                ('view_count', models.IntegerField(default=0)),
                ('clap_count', models.IntegerField(default=0)),
                ('buzzer_count', models.IntegerField(default=0)),
                ('comment_count', models.IntegerField(default=0)),
                ('report_count', models.IntegerField(default=0)),
                ('rating', models.IntegerField(default=0)),
                ('video', models.FileField(blank=True, default='default_files/default.mp4', upload_to='9app_files/videos/4app_files/videos/Iapp_files/videos/Oapp_files/videos/Dapp_files/videos/Japp_files/videos/Lapp_files/videos/Lapp_files/videos/0app_files/videos/V')),
                ('status', models.BooleanField(default=False)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('app_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='View',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('app_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='SolutionViewConnector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('solution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.solution')),
                ('view', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.view')),
            ],
        ),
        migrations.CreateModel(
            name='SolutionReportConnector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.report')),
                ('solution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.solution')),
            ],
        ),
        migrations.CreateModel(
            name='SolutionCommentConnector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.comment')),
                ('solution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.solution')),
            ],
        ),
        migrations.CreateModel(
            name='SolutionClapConnector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('clap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.clap')),
                ('solution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.solution')),
            ],
        ),
        migrations.CreateModel(
            name='SolutionBuzzerConnector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('buzzer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.buzzer')),
                ('solution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.solution')),
            ],
        ),
        migrations.AddField(
            model_name='solution',
            name='buzzers',
            field=models.ManyToManyField(through='main.SolutionBuzzerConnector', to='main.Buzzer'),
        ),
        migrations.AddField(
            model_name='solution',
            name='claps',
            field=models.ManyToManyField(through='main.SolutionClapConnector', to='main.Clap'),
        ),
        migrations.AddField(
            model_name='solution',
            name='comments',
            field=models.ManyToManyField(through='main.SolutionCommentConnector', to='main.Comment'),
        ),
        migrations.AddField(
            model_name='solution',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.problem'),
        ),
        migrations.AddField(
            model_name='solution',
            name='reports',
            field=models.ManyToManyField(through='main.SolutionReportConnector', to='main.Report'),
        ),
        migrations.AddField(
            model_name='solution',
            name='views',
            field=models.ManyToManyField(through='main.SolutionViewConnector', to='main.View'),
        ),
        migrations.CreateModel(
            name='ProblemViewConnector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.problem')),
                ('view', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.view')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemReportConnector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.problem')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.report')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemCommentConnector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.comment')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.problem')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemClapConnector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('clap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.clap')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.problem')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemBuzzerConnector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('buzzer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.buzzer')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.problem')),
            ],
        ),
        migrations.AddField(
            model_name='problem',
            name='buzzers',
            field=models.ManyToManyField(through='main.ProblemBuzzerConnector', to='main.Buzzer'),
        ),
        migrations.AddField(
            model_name='problem',
            name='claps',
            field=models.ManyToManyField(through='main.ProblemClapConnector', to='main.Clap'),
        ),
        migrations.AddField(
            model_name='problem',
            name='comments',
            field=models.ManyToManyField(through='main.ProblemCommentConnector', to='main.Comment'),
        ),
        migrations.AddField(
            model_name='problem',
            name='reports',
            field=models.ManyToManyField(through='main.ProblemReportConnector', to='main.Report'),
        ),
        migrations.AddField(
            model_name='problem',
            name='views',
            field=models.ManyToManyField(through='main.ProblemViewConnector', to='main.View'),
        ),
    ]
